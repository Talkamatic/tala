pipeline {
    agent none

    parameters {
        string(
            defaultValue: '<tag>',
            description: 'Specify the tag to release, e.g. "1.0.0.rc1".',
            name: 'GIT_TAG_TO_BUILD'
        )
    }

    options {
        timestamps()
    }

    stages {
        stage('checkout') {
            agent any
            steps {
                deleteDir()
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'refs/tags/$GIT_TAG_TO_BUILD']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [],
                        submoduleCfg: [],
                        userRemoteConfigs: [[
                            credentialsId: 'jenkinsatgerrit',
                            url: 'ssh://jenkins@gerrit.talkamatic.se:29418/tala'
                        ]]
                    ])
                    env.COMMIT_TO_RELEASE = sh(script: "git rev-parse HEAD", returnStdout: true).trim()
                }
            }
        }

        stage('build wheel') {
            agent {
                dockerfile {
                    filename 'Dockerfile-dev'
                }
            }
            steps {
                sh "pip wheel --wheel-dir dist --no-deps ."
                stash includes: 'dist/tala*.whl', name: 'wheel'
            }
        }

        stage('upload to PyPI') {
            agent {
                dockerfile {
                    filename 'Dockerfile-release'
                }
            }
            steps {
                unstash 'wheel'
                withCredentials([usernamePassword(credentialsId: 'talkamatic-pypi', passwordVariable: 'TWINE_PASSWORD', usernameVariable: 'TWINE_USERNAME')]) {
                    sh "twine upload --skip-existing dist/*"
                }
            }
        }

        stage('tag and push image') {
            agent { label 'docker' }
            steps {
                withCredentials([[$class: 'StringBinding', credentialsId: 'dockerhubcred', variable: 'pw']]) {
                    sh "echo ${pw} | docker login -u zigit --password-stdin"
                }
                sh "docker pull talkamatic/tala:${env.COMMIT_TO_RELEASE}"
                sh "docker tag talkamatic/tala:${env.COMMIT_TO_RELEASE} talkamatic/tala:${GIT_TAG_TO_BUILD}"
                sh "docker push talkamatic/tala:${GIT_TAG_TO_BUILD}"
            }
        }
    }
}
