pipeline {
    agent { label 'docker && tala && linux' }

    parameters {
        string(
            defaultValue: '<tag>',
            description: 'Specify the tag to release, e.g. "1.0.0.rc1".',
            name: 'GIT_TAG_TO_BUILD'
        )
    }

    options {
        timestamps()
    }

    stages {
        stage('prepare') {
            steps {
                deleteDir()
            }
        }

        stage('checkout') {
            steps {
                script {
                    def scm = checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'refs/tags/$GIT_TAG_TO_BUILD']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [],
                        submoduleCfg: [],
                        userRemoteConfigs: [[
                            credentialsId: 'jenkinsatgerrit',
                            url: 'ssh://jenkins@gerrit.talkamatic.se:29418/tala'
                        ]]
                    ])
                    env.GIT_COMMIT = scm.GIT_COMMIT
                }
                echo "${env.GIT_COMMIT}"
                sh "virtualenv venv"
            }
        }

        stage('build wheel') {
            steps {
                sh ". venv/bin/activate; pip wheel --wheel-dir dist --no-deps ."
            }
        }

        stage('upload to PyPI') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'talkamatic-pypi', passwordVariable: 'TWINE_PASSWORD', usernameVariable: 'TWINE_USERNAME')]) {
                    sh ". venv/bin/activate; pip install twine cmarkgfm"
                    sh ". venv/bin/activate; twine upload --skip-existing dist/*"
                }
            }
        }

        stage('tag and push image') {
            steps {
                withCredentials([[$class: 'StringBinding', credentialsId: 'dockerhubcred', variable: 'pw']]) {
                    sh "echo ${pw} | docker login -u zigit --password-stdin"
                }
                sh "docker pull talkamatic/tala:${GIT_COMMIT}"
                sh "docker tag talkamatic/tala:${GIT_COMMIT} talkamatic/tala:${GIT_TAG_TO_BUILD}"
                sh "docker push talkamatic/tala:${GIT_TAG_TO_BUILD}"
            }
        }
    }
}
