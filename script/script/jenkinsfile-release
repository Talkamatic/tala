pipeline {
    agent { label 'docker' }

    parameters {
        string(
            defaultValue: '<tag>',
            description: 'Specify the tag to release, e.g. "1.0.0.rc1".',
            name: 'GIT_TAG_TO_BUILD'
        )
    }

    options {
        timestamps()
    }

    stages {
        stage('checkout') {
            steps {
                sh "rm -rf *"
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'refs/tags/$GIT_TAG_TO_BUILD']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [],
                    submoduleCfg: [],
                    userRemoteConfigs: [[
                        credentialsId: 'jenkinsatgerrit',
                        url: 'ssh://jenkins@gerrit.talkamatic.se:29418/tala'
                    ]]
                ])
                script {
                    env.COMMIT_TO_RELEASE = sh(script: "git rev-parse HEAD", returnStdout: true).trim()
                }
            }
        }

        stage('build python3.7 wheel') {
            agent {
                docker {
                    image 'python:3.7'
                    alwaysPull true
                    reuseNode true
                }
            }
            steps {
                sh "pip wheel --wheel-dir . --no-deps ."
            }
        }

        stage('upload to PyPI') {
            agent {
                dockerfile {
                    filename 'Dockerfile-release'
                    additionalBuildArgs '--pull'
                    reuseNode true
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'talkamatic-pypi', passwordVariable: 'TWINE_PASSWORD', usernameVariable: 'TWINE_USERNAME')]) {
                    sh "twine upload --skip-existing *.whl"
                }
            }
        }

        stage('tag and push image') {
            steps {
                withCredentials([[$class: 'StringBinding', credentialsId: 'dockerhubcred', variable: 'pw']]) {
                    sh "echo ${pw} | docker login -u zigit --password-stdin"
                }
                sh "docker pull talkamatic/tala:${env.COMMIT_TO_RELEASE}"
                sh "docker tag talkamatic/tala:${env.COMMIT_TO_RELEASE} talkamatic/tala:${GIT_TAG_TO_BUILD}"
                sh "docker push talkamatic/tala:${GIT_TAG_TO_BUILD}"
                sh "docker tag talkamatic/tala:${env.COMMIT_TO_RELEASE} talkamatic/tala:latest"
                sh "docker push talkamatic/tala:latest"
            }
        }
    }
}
